---
title: Hello, Quarto
description: | 
  A summary of example usages of Quarto.
date: "2024-04-19"
# publishDate: 2021-12-31T10:00:00+08:00
draft: true
format:
    hugo-md: default
    # pdf: default
    # html: default
link-citations: true
jupyter: python3
fig-cap-location: bottom
code-annotations: hover
author:
  - name: Utensil Song
    id: us
    orcid: 0000-0003-3994-4466
    email: utensil@example.com
    affiliation: Independent
    corresponding: true
license: "CC BY-SA"
funding: "The author(s) received no specific funding for this work."
title-block-banner: true
citation: true
bibliography: ../math-2024/bib.bib
csl: apa-6th-edition.csl
appendex-cite-as: true
nocite: |
  @figueroa2010spin, @reynoso2023probing
tags:
    - authoring
---

The following are taken from [official examples](https://quarto.org/docs/) for now. 

<!-- ```{=html}
<a href="./index.pdf" target="_blank" style="float: right; font-size: 12px; text-decoration: none;">ðŸ“„ View as PDF</a>
``` -->

<!--more-->

## Markdown Basics

superscript^2^ / subscript~2~

`verbatim code`

| Line Block
|   Spaces and newlines
|   are preserved

Here's some raw inline HTML: `<a>html</a>`{=html}

term
: a long long long long long definition

::: {.hidden}
$$
 \def\RR{{\mathbb R}}
$$
:::

```{=latex}
\def\RR{{\mathbb R}}
```

inline math: $E = mc^{2} \in \RR$

display math:

$$E = mc^{2} \in \RR$$

| Right | Left | Default | Center |
|------:|:-----|---------|:------:|
|   12  |  12  |    12   |    12  |
|  123  |  123 |   123   |   123  |
|    1  |    1 |     1   |     1  |

```python
1 + 1
```

```{.python filename="run.py"}
1 + 1
```

```r
library(tidyverse)
library(palmerpenguins)
penguins |>                                      # <1>
  mutate(                                        # <2>
    bill_ratio = bill_depth_mm / bill_length_mm, # <2>
    bill_area  = bill_depth_mm * bill_length_mm  # <2>
  )                                              # <2>
```

1. Take `penguins`, and then,
2. add new columns for the bill ratio and bill area.

(TODO: Highlight conflicted, code annotation JS disabled)

::: {.callout-tip #tip-example collapse="true" appearance="simple" icon="true"}
Note that there are five types of callouts, including: 
`note`, `tip`, `warning`, `caution`, and `important`.
:::

(TODO: Callouts are not working for `hugo-md`, Bootstrap disabled too)

To print, press {{< kbd Shift-Ctrl-P >}}. To open an existing new project, press {{< kbd mac=Shift-Command-O win=Shift-Control-O linux=Shift-Ctrl-L >}}.

(TODO: shortcuts are not working for `hugo-md`, disabled)

## Figures

<!-- ::: {#fig-elephants layout-ncol=2} -->

::: {#fig-elephants layout="[[50, -20, 30], [-15, 70, -15]]" layout-valign="bottom"}
![](https://quarto.org/docs/authoring/elephant.png "Surus"){#fig-surus}

![](https://quarto.org/docs/authoring/elephant.png "Hanno"){#fig-hanno}

[![](https://quarto.org/docs/authoring/elephant.png "Abdul Abbas"){#fig-surus .lightbox width=70% fig-align="right"}](https://quarto.org)

<!-- [![](https://quarto.org/docs/authoring/elephant.png "Lin Wang")](https://quarto.org){#fig-hanno} -->

Famous Elephants
:::

<!-- ![](./image.tikz.tex) -->

## Scholarly Writing

### Citations

See [@baez2002octonions].

(TODO: citation linking and hover requires `link-citations: true` and extra hacking, see "PORTING NOTE" in `layouts/partials/quarto.html`)

### Footnotes

Here is a footnote reference,[^1] and another note with multiple blocks.[^longnote]

[^1]: Here is the footnote.

[^longnote]: Here's one with multiple blocks.

    Subsequent paragraphs are indented to show that they
belong to the previous footnote.

        { some.code }

    The whole paragraph can be indented, or just the first
    line.  In this way, multi-paragraph footnotes work like
    multi-paragraph list items.

This paragraph won't be part of the note, because it
isn't indented.

Here is an inline note.^[Inlines notes are easier to write,
since you don't have to pick an identifier and move down to
type the note.]

### Cross-References

For a demonstration of a line plot on a polar axis, see @fig-polar.

For tips on callouts, see @tip-example. (TODO: Not working for `hugo-md`)

## Literate programming

### Python

```{python}
#| label: fig-polar
#| fig-cap: "A line plot on a polar axis"
#| fig-subcap: 
#|   - "First"
#|   - "Second"
#| layout-ncol: 2

import numpy as np
import matplotlib.pyplot as plt

r = np.arange(0, 2, 0.01)
theta = 2 * np.pi * r

plt.plot([1,23,2,4])
plt.show()

fig, ax = plt.subplots(subplot_kw={'projection': 'polar'})
ax.plot(theta, r)
ax.set_rticks([0.5, 1, 1.5, 2])
ax.grid(True)
plt.show()
```

The following example is based on [3DCGA: Intersections](https://kingdon.readthedocs.io/en/latest/examples/ex_3dcga_intersections.html):

```{python}
from kingdon import Algebra

alg = Algebra(4, 1)
locals().update(alg.blades)

ni = e4 + e5
no = 0.5 * (e5 - e4)
nino = ni ^ no
up = lambda x: no + x + 0.5 * x * x * ni

p  = up(0)                                          # point
S  = (p - 0.5 * ni).dual()                          # main dual sphere around point (interactive)
S2 = (up(-1.4*e1) - 0.125 * ni).dual()              # left dual sphere
C  = (up(1.4*e1) - 0.125 * ni).dual() & e3.dual()   # right circle
L  = up(0.9*e2) ^ up(0.9*e2 - 1*e1) ^ ni            # top line
P  = (1*e2 - 0.9*ni).dual()                         # bottom dual plane
P2 = (1*e1 + 1.7*ni).dual()                         # right dual plane

C1 = S & P
C2 = S & L
C3 = S & S2
C4 = S & C
C5 = C & P2
lp = up(nino.lc(P2 & (L ^ no)))

print("p=", p)
print("lp=", lp)
print("C1=", C1)
print("C2=", C2)
print("C3=", C3)
print("C4=", C4)
print("C5=", C5)
print("L=", L)
print("P=", P)
print("S=", S)
print("S2=", S2)
```

```{python}
alg.graph(
    0x00FF0000, p, "s1",             # point
    0xFF00FF,lp,"l&p",               # line intersect plane
    0x0000FF,C1,"s&p",               # sphere meet plane
    0x888800,C2,"s&l",               # sphere meet line
    0x0088FF,C3,"s&s",               # sphere meet sphere
    0x008800,C4,"s&c",               # sphere meet circle
    0x880000,C5,"c&p",               # circle meet sphere
    0,L,0,C,                         # line and circle
    0xE0008800, P, P2,               # plane
    0xE0FFFFFF, S, "s1", S2,         # spheres
    conformal=1,
    grid=1,
    gl=1,
)
```

The following example is based on [Introduction to using GAlgebra](https://galgebra.readthedocs.io/en/latest/tutorials/algebra.html):

```{python}
import sympy
from galgebra.ga import Ga
from galgebra.printer import latex
from IPython.display import Math

# tell sympy to use our printing by default
sympy.init_printing(latex_printer=latex, use_latex='mathjax')

xyz = (x, y, z) = sympy.symbols('x y z', real=True)
o3d = Ga('e_x e_y e_z', g=[1, 1, 1], coords=xyz)
grad = o3d.grad

a = o3d.mv('a','vector')
b = o3d.mv('b','vector')

Math(fr'''
\begin{{align}}
    a           &= {latex(a)} \\
    b           &= {latex(b)} \\
    a+b         &= {latex(a+b)} \\
    a-b         &= {latex(a-b)} \\
    ab          &= {latex(a*b)} \\
    a\cdot b    &= {latex(a|b)} \\
    a \rfloor b &= {latex(a<b)} \\
    a \lfloor b &= {latex(a>b)} \\
    a\wedge b   &= {latex(a^b)}
\end{{align}}
''')
```

```{python}
B = o3d.mv('B','bivector')
Math(fr'''
\begin{{align}}
B           &= {latex(B)} \\
BB          &= {latex(B*B)} \\
a+B         &= {latex(a+B)} \\
a-B         &= {latex(a-B)} \\
aB          &= {latex(a*B)} \\
a\cdot B    &= {latex(a|B)} \\
a \rfloor B &= {latex(a<B)} \\
a \lfloor B &= {latex(a>B)} \\
a\wedge B   &= {latex(a^B)} \\
\end{{align}}
''')
```

### Observable JS

The following example is taken from [Steven De Keninck's Animated Orbits](https://observablehq.com/@enkimute/animated-orbits) .

```{ojs}
Algebra = require('ganja.js@1.0.151')
```

```{ojs}
Algebra(3,0,1,()=>{
  var t=1, E=Math.E, sin=Math.sin, cos=Math.cos, PI=Math.PI;
  var f=(x,y)=> E**(x*PI*1e12)
               *E**(.5e01+sin(t)*sin(x*PI*6)*.25e01)
               *E**((x*2+y)*PI*1e13)
               *E**(cos(t*1.31)*0.2e01+sin(t*1.31)*0.2e03);
  f.dx=400; f.dy=5; 
  var camera=0e1+1, start=performance.now();
  return (this.graph(()=>{
    t=(performance.now()-start)/2234; 
    camera.set((1+1e03)* (Math.cos(t/4) + Math.sin(t/4)*1e13 )  );
    f.va=undefined;  // force re-evaluate of geometry ..
    return [0xff0088,f];
  },{camera,gl:1,animate:1,width:"100%",height:"600px"}));
    
})
```

The following example is taken from [Steven De Keninck's Klein Bottle](https://enki.ws/ganja.js/examples/coffeeshop.html#CvgNlPqDa):

```{ojs}
GAmphetamineModule = import('https://enki.ws/GAM/src/GAmphetamine.js')
```

```{ojs}
GAmphetamine = GAmphetamineModule.default
```

```{ojs}
kb = GAmphetamine(4,0,1,()=>{
  
  const {E, sin, cos, PI} = Math;
  
  const [n1,n2] = [16, 128];
  const [r1,r2] = [0.15, 0.6];
  
  var circle = r1=>[...Array(n1+1).keys()]
               .map(x=>E**(x/n1 * PI * 1e12) * E**(r1*1e01) >>> !1e0)
               .map((x,i,a)=>[x,a[i+1]||a[0]]);
  
  var klein = [...Array(n2+1).keys()]
              .map(x=>E**(x/n2 * PI * 1e13) * E**(r2*1e01) * E**(x/n2 * PI * 1.5e14) >>> circle(r1+0.1*sin(8*PI*x/n2)));
      
  var edges = klein.map((t,ti)=>t.map((p,pi)=>[p[0],(klein[ti+1]||klein[0])[pi][0]])).slice(0,-1).flat()
  
  klein = E**(-0.78e23) * E**((.5e14 + .0e24)) >>> [...klein.flat(), ...edges];
  
  var SVG=this.graph([0x009977, ...klein], {arrowSize:0, h:0, p:-0.25});
  
  return SVG;
  
})
```

```{ojs}
svg`${kb}`
```

## References

::: {#refs}
:::